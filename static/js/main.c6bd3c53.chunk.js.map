{"version":3,"sources":["Backend/BooksAPI.js","Components/Shelves/ShelfUpdate.js","Components/Book/Book.js","Components/Search/Search.js","Components/Shelves/Shelves.js","Components/Main/Main.js","Components/App/App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","UpdateShelf","book","shelf","useState","currentShelf","updateCurrentShelf","shelves","shelfname","title","value","onChange","e","newShelf","target","fetch","id","method","body","JSON","stringify","then","res","json","BooksAPI","disabled","undefined","filter","map","Book","Shelf","className","style","width","height","backgroundImage","imageLinks","thumbnail","split","join","ShelfUpdate","authors","length","SearchBar","setShowSearchpage","searchQuery","setSearchQuery","BooksList","setBooksList","href","onClick","type","placeholder","query","maxResults","toLowerCase","trim","data","books","color","textDecoration","margin","ShelvesList","props","AllBooks","Books","setBooks","useEffect","MainPage","App","showSearchPage","Search","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6bd3c53.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import { useState } from \"react\";\r\nimport * as BooksAPI from '../../Backend/BooksAPI'\r\nconst UpdateShelf = ({book,shelf}) => {\r\n    const [currentShelf, updateCurrentShelf] = useState('')\r\n    const shelves = [\r\n        { shelfname: \"currentlyReading\", title : \"Currently Reading\" },\r\n        { shelfname: \"wantToRead\", title : \"Want to Read\" },\r\n        { shelfname: \"read\", title: \"Read\" },\r\n        { shelfname: \"none\", title:\"None\"}\r\n    ]\r\n    const handleShelfUpdate = (e) => {\r\n        const newShelf = e.target.value\r\n        updateCurrentShelf(newShelf)\r\n        BooksAPI.update(book,newShelf)\r\n    }\r\n\r\n    return(\r\n        <select value={currentShelf} onChange={handleShelfUpdate}>\r\n            <option value=\"\" disabled>\r\n            Move to...\r\n            </option>\r\n            {\r\n                shelf !== undefined\r\n                ? shelves.filter(({shelfname}) => shelfname !== shelf)\r\n                .map(({shelfname,title}) => {\r\n                    return (\r\n                        <option key={shelfname} value={shelfname}>{title}</option>\r\n                    )\r\n                })\r\n                : shelves.filter(({shelfname}) => shelfname !== \"none\")\r\n                .map(({shelfname,title}) => {\r\n                    return (\r\n                        <option key={shelfname} value={shelfname}>{title}</option>\r\n                    )\r\n                })\r\n                \r\n            }\r\n        </select>\r\n    )\r\n}\r\n\r\n\r\nexport default UpdateShelf;","import ShelfUpdate from '../Shelves/ShelfUpdate'\r\nconst Book = ({book,Shelf}) => {\r\n\r\n    return(\r\n        <li className={`listedBook`} key={book.id}>\r\n            <span className=\"tooltip-text\">{book.title}</span>\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div\r\n                    className=\"book-cover\"\r\n                    style={{\r\n                        width: \"100%\",\r\n                        height:193,\r\n                        backgroundImage:\r\n                        book.imageLinks ? `url(${ book.imageLinks.thumbnail })`: `url(https://dummyimage.com/128x193/ff4000/fcfc7e.png&text=${book.title.split(' ').join('+')})`,\r\n                    }}\r\n                    ></div>\r\n                    <div className=\"book-shelf-changer\">\r\n                        <ShelfUpdate key={book.id} book={book} shelf={book.shelf} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"book-authors\">\r\n                    {\r\n                        book.authors && book.authors.length > 0\r\n                        ? <div className=\"author-name\" key={ book.title + book.authors[0] } >{ book.authors[book.authors.length-1] }</div>\r\n                        : <div className=\"author-name\" key={ book.title + \"unknown\" } >{ \"unknown\" }</div>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\nexport default Book;","import React, {useState,useEffect} from \"react\";\r\nimport * as BooksAPI from '../../Backend/BooksAPI'\r\nimport Book from \"../Book/Book\";\r\n\r\nconst SearchBar = ({setShowSearchpage}) => {\r\n    const [searchQuery, setSearchQuery] = useState('')\r\n    const [BooksList, setBooksList] = useState([])\r\n    \r\n    const SearchQuery = (e) => {\r\n        setSearchQuery(e.target.value.toLowerCase().toString().trim())\r\n        if(searchQuery && e.target.value !== \"\"){\r\n            BooksAPI.search(searchQuery.toLowerCase().toString().trim(), 30)\r\n            .then(books => {\r\n                books.length>0 ? setBooksList(books) : setBooksList([])\r\n            })\r\n        } else {\r\n            setBooksList([])\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <a\r\n              className=\"close-search\"\r\n              href=\"#close\"\r\n              onClick={() => setShowSearchpage(false)}\r\n            >\r\n              Close\r\n            </a>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Type (book name / author name)\"\r\n                value={searchQuery}\r\n                onChange={SearchQuery}\r\n              />\r\n            </div>\r\n          </div>\r\n          {searchQuery.length> 0 ? <div className=\"searchbar-tip\"><span style={{color: BooksList.length>0 ? \"green\": \"red\",textDecoration:\"underline\",margin:\"0px 5px\",}}>{BooksList.length} </span> Books has been found.</div>: <></>}\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n                { BooksList.length > 0 ? \r\n                    BooksList.map((book) =>\r\n                    <Book key={book.id} book={book} />) : <></>}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import { useEffect, useState } from \"react\";\r\nimport Book from \"../Book/Book\";\r\nimport * as BooksAPI from '../../Backend/BooksAPI'\r\n\r\nconst ShelvesList = (props) => {\r\n    const {Shelf, AllBooks} = props\r\n    const shelves = [\r\n        { shelfname: \"currentlyReading\", title : \"Currently Reading\" },\r\n        { shelfname: \"wantToRead\", title : \"Want to Read\" },\r\n        { shelfname: \"read\", title: \"Read\" },\r\n        { shelfname: \"none\", title:\"None\"}\r\n    ]\r\n    const [Books, setBooks] = useState([])\r\n    \r\n    useEffect(() => {\r\n        BooksAPI.getAll().then((books) => {\r\n            setBooks(books)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"bookshelf\" key={Shelf}>\r\n            <h2 className=\"bookshelf-title\">{shelves.filter(({shelfname}) => shelfname === Shelf).map((shelf) => {return (shelf.title)})}</h2>\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                    {\r\n                        Books.filter(({shelf}) => shelf === Shelf).length > 0\r\n                        ? Books.filter(({shelf}) => shelf === Shelf).map((book) => <Book key={book.id} book={book} />)\r\n                        : <h3><span style={{color:\"red\",textDecoration:\"underline\"}}>{Books.filter(({shelf}) => shelf === Shelf).length}</span> Books found in this shelf.</h3>\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ShelvesList;","\r\nimport ShelvesList from \"../Shelves/Shelves\";\r\n\r\n\r\nconst MainPage = ({setShowSearchpage}) => {\r\n  const Shelves = [\r\n    \"currentlyReading\",\r\n    \"wantToRead\",\r\n    \"read\"\r\n  ]\r\n    return (\r\n        <div className=\"list-books\">\r\n          <div className=\"list-books-title\">\r\n            <h1>MyReads</h1>\r\n          </div>\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              {Shelves.map((Shelf) => <ShelvesList key={Shelf} Shelf={Shelf} />)}\r\n            </div>\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <a href=\"#add\" onClick={ () => {setShowSearchpage(true)}}>Add a book</a>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import \"../../Utilities/Styles/App.css\";\r\nimport React, { useState } from \"react\";\r\nimport SearchBar from \"../Search/Search\";\r\nimport MainPage from \"../Main/Main\";\r\n\r\nfunction App() {\r\n  const [showSearchPage, setShowSearchpage] = useState(false);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {showSearchPage ? (\r\n        <SearchBar setShowSearchpage={setShowSearchpage} />\r\n      ) : (\r\n        <MainPage setShowSearchpage={setShowSearchpage}/>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React  from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport  {BrowserRouter} from \"react-router-dom\"\r\nimport \"./Utilities/Styles/index.css\";\r\nimport App from \"./Components/App/App\";\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}