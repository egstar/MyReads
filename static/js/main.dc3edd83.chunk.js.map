{"version":3,"sources":["Backend/BooksAPI.js","Components/Shelves/ShelfUpdate.js","Components/Book/Book.js","Components/Shelves/Shelves.js","Views/Home/Home.js","Components/Main/Main.js","Views/Search/Search.js","Components/Search/Search.js","Components/Main/Index.js","Components/App/App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","books","UpdateShelf","props","book","Shelf","setBooks","shelves","setMounted","Mounted","useState","currentShelf","updateCurrentShelf","defaultValue","onChange","e","newShelf","target","value","filter","thisBook","id","concat","shelf","method","body","JSON","stringify","BooksAPI","Results","style","background","fontWeight","color","border","disabled","name","map","title","undefined","Book","className","width","height","backgroundImage","imageLinks","thumbnail","split","join","length","thisbook","authors","ShelvesList","textDecoration","HomeView","Shelves","to","MainPage","Home","SearchView","searchQuery","SearchQuery","BooksList","type","placeholder","matchedBooks","margin","currentBooks","includes","SearchBar","matched","setSearchQuery","setBooksList","useEffect","current","Search","query","maxResults","toLowerCase","trim","mybooks","Index","App","window","onload","console","log","path","element","index","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc3edd83.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import {  useState } from \"react\";\r\nimport * as BooksAPI from '../../Backend/BooksAPI'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst UpdateShelf = (props) => {\r\n    const {book,Shelf,setBooks,books,shelves,setMounted,Mounted} = props\r\n    const [currentShelf, updateCurrentShelf] = useState(Shelf)\r\n    \r\n    const handleShelfUpdate = (e) => {\r\n        const newShelf = e.target.value\r\n        updateCurrentShelf(newShelf)\r\n        setBooks((books)=> {\r\n            books.filter((thisBook) => thisBook.id !== book.id).concat([book])\r\n        })\r\n\r\n        BooksAPI.update(book,newShelf).then(() =>{\r\n            setMounted(!Mounted)\r\n            BooksAPI.getAll().then((Results) => {\r\n                if(books !== Results){\r\n                    setBooks(Results)\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    return(\r\n        <select defaultValue={Shelf} onChange={handleShelfUpdate}>\r\n            <option style={{background:\"orange\",fontWeight:\"bold\",color:\"white\",border:\"2px solid red\"}} value={Shelf} disabled>\r\n            Move from [ {shelves && shelves.filter(({name}) => name === currentShelf).map(({title}) => { return( title ? title : \"none\" ) })} ]\r\n            </option>\r\n            {\r\n                \r\n                Shelf !== undefined\r\n                ? shelves && shelves.filter(({name}) => name !== Shelf)\r\n                .map(({name,title}) => {\r\n                    return (\r\n                        <option key={name} value={name}>{title}</option>\r\n                    )\r\n                }) \r\n                : shelves && shelves.filter(({name}) => name !== \"none\")\r\n                .map(({name,title}) => {\r\n                    return (\r\n                        <option key={name} value={name}>{title}</option>\r\n                    )\r\n                })\r\n                \r\n            }\r\n        </select>\r\n    )\r\n}\r\nUpdateShelf.propTypes = {\r\n    setBooks: PropTypes.func.isRequired,\r\n    book: PropTypes.object.isRequired,\r\n    Shelf: PropTypes.string\r\n}\r\n\r\nexport default UpdateShelf;","import UpdateShelf from '../Shelves/ShelfUpdate'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Book = (props) => {\r\n    const {book,setBooks,books,shelves,setMounted,Mounted} = props\r\n    \r\n    return(\r\n        <li className={`listedBook`} key={book.id}>\r\n            <span className=\"tooltip-text\">{book.title}</span>\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div\r\n                    className=\"book-cover\"\r\n                    style={{\r\n                        width: \"100%\",\r\n                        height:193,\r\n                        backgroundImage:\r\n                        book.imageLinks ? `url(${ book.imageLinks.thumbnail })`: `url(https://dummyimage.com/128x193/ff4000/fcfc7e.png&text=${book.title.split(' ').join('+')})`,\r\n                    }}\r\n                    ></div>\r\n                    <div className=\"book-shelf-changer\">\r\n                        <UpdateShelf \r\n                            key={book.id} \r\n                            book={book} \r\n                            books={books}\r\n                            Shelf={book.shelf ? book.shelf : books.filter(({id}) => id === book.id).length > 0 ? books.filter(({id}) => id === book.id).map((thisbook) => { return thisbook.shelf} ).toString() : \"none\"} \r\n                            shelves={shelves}\r\n                            setBooks={ setBooks}\r\n                            setMounted={ setMounted}\r\n                            Mounted={Mounted}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"book-authors\">\r\n                    {\r\n                        book.authors && book.authors.length > 0\r\n                        ? <div className=\"author-name\" key={ book.title + book.authors[0] } >{ book.authors[book.authors.length-1] }</div>\r\n                        : <div className=\"author-name\" key={ book.title + \"unknown\" } >{ \"unknown\" }</div>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\nBook.propTypes = {\r\n    onBooksUpdate: PropTypes.func,\r\n    book: PropTypes.object,\r\n    Shelf: PropTypes.string\r\n}\r\nexport default Book;","import Book from \"../Book/Book\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ShelvesList = (props) => {\r\n    const {Shelf,shelves,books,setBooks,setMounted,Mounted} = props\r\n    return (\r\n        <div className=\"bookshelf\" key={Shelf}>\r\n            <h2 className=\"bookshelf-title\">{shelves.filter(({name}) => name === Shelf.name).map((shelf) => {return (shelf.title)})}</h2>\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                    {\r\n                        books.filter(({shelf}) => shelf === Shelf.name).length > 0\r\n                        ? books.filter(({shelf}) => shelf === Shelf.name).map((book) => <Book key={book.id} book={book} Shelf={book.shelf} books={books} setBooks={ setBooks} shelves={shelves} setMounted={ setMounted} Mounted={Mounted}/>)\r\n                        : <h3><span style={{color:\"red\",textDecoration:\"underline\"}}>{books.filter(({shelf}) => shelf === Shelf.name).length}</span> Books found in this shelf.</h3>\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nShelvesList.propTypes = {\r\n    setBooks: PropTypes.func,\r\n    Shelf: PropTypes.object.isRequired,\r\n    book: PropTypes.objectOf(PropTypes.object),\r\n}\r\nexport default ShelvesList;","import { Link } from \"react-router-dom\";\r\nimport ShelvesList from \"../../Components/Shelves/Shelves\";\r\n\r\nconst HomeView = (props) => {\r\n    const {Mounted,setMounted,books,shelves,setBooks} = props\r\n    \r\n\r\n    return(\r\n        <div className=\"list-books\">\r\n          <div className=\"list-books-title\">\r\n            <h1>MyReads</h1>\r\n          </div>\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              { shelves\r\n                .filter(({name}) => name !== \"none\")\r\n                .map((Shelf) =>\r\n                    <ShelvesList\r\n                    key={Shelf.name}\r\n                    Mounted={Mounted}\r\n                    setMounted={ setMounted}\r\n                    books={books}\r\n                    shelves={shelves}\r\n                    Shelf={Shelf}\r\n                    setBooks={setBooks}\r\n                    />\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <Link to={`/search`} >Add a book</Link>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\nexport default HomeView;","import HomeView from \"../../Views/Home/Home\";\r\n\r\nconst MainPage = (props) => {\r\n  const {shelves,books,setBooks,setMounted,Mounted} = props\r\n    return (\r\n        <HomeView \r\n          Mounted={Mounted}\r\n          setMounted={ setMounted}\r\n          books={books}\r\n          shelves={shelves}\r\n          setBooks={ setBooks}\r\n          />\r\n    )\r\n}\r\n\r\nexport default MainPage;","import { Link } from \"react-router-dom\";\r\nimport Book from \"../../Components/Book/Book\";\r\n\r\nconst SearchView = (props) => {\r\n    const {searchQuery,SearchQuery,BooksList,shelves,setBooks,books,setMounted,Mounted} = props\r\n    \r\n    return (\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <Link to={`/`}\r\n              className=\"close-search\"\r\n            >\r\n              Close\r\n            </Link>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Type Book name here\"\r\n                value={searchQuery}\r\n                onChange={SearchQuery}\r\n                \r\n              />\r\n            </div>\r\n          </div>\r\n          {searchQuery.length > 0 && BooksList.matchedBooks ? <div className=\"searchbar-tip\"><span style={{color: BooksList.matchedBooks.length>0 ? \"green\": \"maroon\",textDecoration:\"underline\",margin:\"0px 5px\",}}>{BooksList.matchedBooks.length} </span> Books has been found.</div>: <></>}\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n                { BooksList.matchedBooks && BooksList.matchedBooks.length > 0 \r\n                ? BooksList.currentBooks && BooksList.currentBooks.length > 0 && BooksList.currentBooks.includes({id: BooksList.matchedBooks.map((books) => books.id)})\r\n                    ? BooksList.currentBooks.map((book) => \r\n                    <Book\r\n                        key={book.id}\r\n                        book={book}\r\n                        Shelf={book.shelf}\r\n                        shelves={shelves}\r\n                        setBooks={ setBooks}\r\n                        books={books}\r\n                        setMounted={ setMounted}\r\n                        Mounted={Mounted}\r\n                    />\r\n                    )\r\n                    : BooksList.matchedBooks.map((book) => \r\n                    <Book\r\n                        key={book.id}\r\n                        book={book}\r\n                        Shelf={\"none\"}\r\n                        shelves={shelves}\r\n                        setBooks={ setBooks}\r\n                        books={books}\r\n                        setMounted={ setMounted}\r\n                        Mounted={Mounted}\r\n                    />\r\n                    )\r\n                : <></>}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchView;","import React, {useEffect,useState} from \"react\";\r\nimport * as BooksAPI from '../../Backend/BooksAPI'\r\nimport SearchView from \"../../Views/Search/Search\";\r\n\r\nconst SearchBar = (props) => {\r\n  const { books,setBooks,setMounted,shelves,Mounted } = props\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [BooksList, setBooksList] = useState([\r\n    {\r\n      currentBooks: [books]\r\n    ,\r\n      matchedBooks: []\r\n    }\r\n  ])\r\n  useEffect(() => {\r\n    if(BooksList.currentBooks && BooksList.currentBooks.length<= 0){\r\n    BooksAPI.getAll()\r\n    .then((current) => {\r\n      setBooksList({...BooksList, currentBooks: [current]})\r\n    })}\r\n  },[BooksList])\r\n  let matched;\r\n\r\n  const SearchQuery = (e) => {\r\n      setSearchQuery(e.target.value.toLowerCase().toString())\r\n      if(searchQuery && e.target.value !== \"\"){\r\n        BooksAPI.search(searchQuery.toLowerCase().toString().trim(), 30)\r\n        .then(mybooks => {\r\n          mybooks.length > 0 ? matched = mybooks.filter((book) => book.title.toLowerCase().includes(searchQuery)) : matched = []\r\n\r\n          matched.length > 0 ? setBooksList({...BooksList, matchedBooks: matched}) : setBooksList({...BooksList, matchedBooks: []})\r\n        })\r\n    } else {\r\n        setBooksList([])\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <SearchView \r\n      searchQuery={searchQuery}\r\n      SearchQuery={SearchQuery}\r\n      BooksList={BooksList}\r\n      shelves={shelves}\r\n      setBooks={ setBooks}\r\n      books={books}\r\n      setMounted={ setMounted}\r\n      Mounted={Mounted}\r\n     />\r\n  )\r\n}\r\n\r\nexport default SearchBar;","import \"../../Utilities/Styles/App.css\";\r\nimport { Outlet} from \"react-router-dom\";\r\n\r\nconst Index = () => {\r\n    return (\r\n        <Outlet />\r\n    )\r\n\r\n}\r\n\r\nexport default Index","import  {BrowserRouter as Router, Route, Routes} from \"react-router-dom\"\r\nimport MainPage from \"../Main/Main\";\r\nimport SearchBar from \"../Search/Search\";\r\nimport Index from \"../Main/Index\";\r\nimport { useEffect, useState } from \"react\";\r\nimport * as BooksAPI from '../../Backend/BooksAPI'\r\n\r\nconst App = () => {\r\n  const shelves = [\r\n    { name: \"currentlyReading\", title : \"Currently Reading\" },\r\n    { name: \"wantToRead\", title : \"Want to Read\" },\r\n    { name: \"read\", title: \"Read\" },\r\n    { name: \"none\", title:\"None\"}\r\n  ]\r\n  const [books, setBooks] = useState([])\r\n  const [Mounted, setMounted] = useState(false)\r\n  window.onload =() => {\r\n    setMounted(true)\r\n  }\r\n  useEffect(() => {\r\n\r\n    if(Mounted===true){\r\n    BooksAPI.getAll()\r\n    .then((mybooks) => {\r\n            if(mybooks !== books){\r\n                setBooks(mybooks)\r\n            }\r\n        })\r\n    }\r\n    return () => setMounted(false)\r\n  }, [Mounted,books])\r\n\r\n  let color= Mounted===true ? \"lightgreen\" : \"red\"\r\n  console.log(\"%cMounted:%c %c\"+Mounted, \"font-weight:bold;background:navy;color:white\",\"color:white\",\"text-decoration:underline;color:\"+color)\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Index />}>\r\n          <Route index element={<MainPage books={books} setBooks={ setBooks} setMounted={ setMounted} Mounted={Mounted} shelves={shelves} />} />\r\n          <Route path=\"/search\" element={<SearchBar books={books} setBooks={ setBooks} setMounted={ setMounted} Mounted={Mounted} shelves={shelves} />} />\r\n        </Route>\r\n      </Routes>\r\n    </Router>\r\n    \r\n  );\r\n}\r\nexport default App;\r\n","import React  from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Utilities/Styles/index.css\";\r\nimport App from \"./Components/App/App\";\r\n\r\n\r\nReactDOM.render(\r\n    <App />\r\n  ,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}