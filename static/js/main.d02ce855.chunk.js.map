{"version":3,"sources":["Backend/BooksAPI.js","Components/Shelves/ShelfUpdate.js","Views/Book/Book.js","Components/Book/Book.js","Components/Shelves/Shelves.js","Views/Home/Home.js","Components/Main/Main.js","Views/Search/Search.js","Components/Search/Search.js","Components/Main/Index.js","Components/App/App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","books","alertBox","Swal","mixin","showConfirmButton","timer","background","timerProgressBar","didOpen","toast","addEventListener","stopTimer","resumeTimer","UpdateShelf","props","book","Shelf","setBooks","shelves","setMounted","Mounted","useState","currentShelf","updateCurrentShelf","defaultValue","onChange","e","newShelf","target","value","shelf","fire","title","icon","html","filter","name","map","thisBook","id","concat","method","body","JSON","stringify","BooksAPI","Results","style","fontWeight","color","border","disabled","undefined","BooksView","BookView","className","onClick","width","height","backgroundImage","imageLinks","thumbnail","split","join","length","thisbook","authors","Book","BookImage","showCloseButton","closeButtonHtml","previewLink","pageCount","description","auth","replaceAll","ShelvesList","textDecoration","visible","ariaLabel","wrapperStyle","wrapperClass","colors","HomeView","Shelves","to","MainPage","Home","SearchView","searchQuery","SearchQuery","BooksList","minLength","debounceTimeout","element","type","placeholder","matchedBooks","margin","currentBooks","includes","SearchBar","matched","setSearchQuery","setBooksList","useEffect","current","Search","query","maxResults","toLowerCase","trim","mybooks","Index","App","window","onload","path","index","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d02ce855.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import {  useState } from \"react\";\r\nimport * as BooksAPI from '../../Backend/BooksAPI'\r\nimport PropTypes from 'prop-types'\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst alertBox = Swal.mixin({\r\n    showConfirmButton: false,\r\n    timer: 5000,\r\n    background:'linear-gradient(rgb(243, 191, 148),rgb(243, 221, 174),rgb(243, 191, 148))',\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n})\r\n\r\nconst UpdateShelf = (props) => {\r\n    const {book,Shelf,setBooks,books,shelves,setMounted,Mounted} = props\r\n    const [currentShelf, updateCurrentShelf] = useState(Shelf)\r\n    \r\n    const handleShelfUpdate = (e) => {\r\n        const newShelf = e.target.value\r\n        updateCurrentShelf(newShelf)\r\n        book.shelf = newShelf;\r\n        if(Shelf !== newShelf){\r\n            alertBox.fire({\r\n                title:\"Success\",\r\n                icon: \"success\",\r\n                html:\r\n                `<div class=\"toast-book-title\">${book.title}</div> has been moved to <span class=\"toast-shelf\"> ${shelves.filter((shelf) => shelf.name === newShelf).map((shelf) => shelf.title)} </span> shelf.`,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n        } else {\r\n            alertBox.fire({\r\n                title:\"Error\",\r\n                icon: \"error\",\r\n                html:\r\n                `${book.title} is currently on ${newShelf} shelf`,\r\n            })\r\n        }\r\n        setBooks((books)=> {\r\n            return books.filter((thisBook) => thisBook.id !== book.id).concat([book])\r\n        })\r\n        BooksAPI.update(book,newShelf).then(() =>{\r\n            BooksAPI.getAll().then((Results) => {\r\n                if(books !== Results){\r\n                    setBooks(Results)\r\n                    setMounted(!Mounted)\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    return(\r\n        <select defaultValue={Shelf} onChange={handleShelfUpdate}>\r\n            <option style={{background:\"orange\",fontWeight:\"bold\",color:\"white\",border:\"2px solid red\"}} value={Shelf} disabled>\r\n            Move from [ {shelves && shelves.filter(({name}) => name === currentShelf).map(({title}) => { return( title ? title : \"none\" ) })} ]\r\n            </option>\r\n            {\r\n                \r\n                Shelf !== undefined\r\n                ? shelves && shelves.filter(({name}) => name !== Shelf)\r\n                .map(({name,title}) => {\r\n                    return (\r\n                        <option key={name} value={name}>{title}</option>\r\n                    )\r\n                }) \r\n                : shelves && shelves.filter(({name}) => name !== \"none\")\r\n                .map(({name,title}) => {\r\n                    return (\r\n                        <option key={name} value={name}>{title}</option>\r\n                    )\r\n                })\r\n                \r\n            }\r\n        </select>\r\n    )\r\n}\r\nUpdateShelf.propTypes = {\r\n    setBooks: PropTypes.func.isRequired,\r\n    book: PropTypes.object.isRequired,\r\n    Shelf: PropTypes.string\r\n}\r\n\r\nexport default UpdateShelf;","import UpdateShelf from '../../Components/Shelves/ShelfUpdate'\r\n\r\n\r\nexport const BooksView = (props) => {\r\n\r\n    const {book,setBooks,books,shelves,setMounted,Mounted,BookView} = props\r\n\r\n    return(\r\n        <li className={`listedBook`} key={book.id}>\r\n            <span className=\"tooltip-text\">{book.title}</span>\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div\r\n                    className=\"book-cover\" onClick={ () => BookView(book)}\r\n                    style={{\r\n                        width: \"100%\",\r\n                        height:193,\r\n                        backgroundImage:\r\n                        book.imageLinks ? `url(${ book.imageLinks.thumbnail })`: `url(https://dummyimage.com/128x193/ff4000/fcfc7e.png&text=${book.title.split(' ').join('+')})`,\r\n                    }}\r\n                    ></div>\r\n                    <div className=\"book-shelf-changer\">\r\n                        <UpdateShelf \r\n                            key={book.id} \r\n                            book={book} \r\n                            books={books}\r\n                            Shelf={book.shelf ? book.shelf : books.filter(({id}) => id === book.id).length > 0 ? books.filter(({id}) => id === book.id).map((thisbook) => { return thisbook.shelf} ).toString() : \"none\"} \r\n                            shelves={shelves}\r\n                            setBooks={ setBooks}\r\n                            setMounted={ setMounted}\r\n                            Mounted={Mounted}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"book-authors\">\r\n                    {\r\n                        book.authors && book.authors.length > 0\r\n                        ? <div className=\"author-name\" key={ book.title + book.authors[0] } >{ book.authors[book.authors.length-1] }</div>\r\n                        : <div className=\"author-name\" key={ book.title + \"Unknown\" } >{ \"Unknown\" }</div>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n\r\n}","import PropTypes from 'prop-types'\r\nimport Swal from 'sweetalert2'\r\nimport { BooksView } from '../../Views/Book/Book'\r\n\r\n\r\nconst Book = (props) => {\r\n    const {book,setBooks,books,shelves,setMounted,Mounted} = props\r\n    const BookImage = book.imageLinks ? book.imageLinks.thumbnail : `https://dummyimage.com/128x193/ff4000/fcfc7e.png&text=${book.title.split(' ').join('+')}`\r\n    const BookView = (book) => {\r\n        \r\n        const BookModal = Swal.mixin({\r\n            showCloseButton: true,\r\n            closeButtonHtml: `<span class=\"book-view-close\">&times;</span>`,\r\n            background:`linear-gradient(rgb(243, 191, 148),rgb(243, 221, 174),rgb(243, 191, 148))`,\r\n            html:\r\n                `<div class=\"book-view-grid\">\r\n                    <div class=\"book-view-pic\">\r\n                        <img class=\"book-displied-pic\" src=${BookImage} alt=${book.title} />\r\n                    </div>\r\n                    <span class=\"book-view-booklink\"><a href=${book.previewLink} target=\"_blank\">Preview</a></span>\r\n                    <div class=\"book-view-pages\">Number of pages: <span class=\"book-view-pagecount\">${book.pageCount}</span></div>\r\n                    <hr style=\"opacity:0.1;\">\r\n                    <div class=\"book-view-desc\">Description</div>\r\n                    <div class=\"book-view-descval\">${book.description}</div>\r\n                    <hr style=\"opacity:0.1;\">\r\n                    <div class=\"book-view-authors\">Authors: \r\n                        <span class=\"book-view-authval\">${book.authors? book.authors.map((auth) => '<h5 style=\"width:max-content;display:inline\">'+auth+'</h5>').toString().replaceAll(',','  ') : \"Unknown\"}</span>\r\n                    </div>\r\n                    \r\n                    \r\n                    \r\n                </div>`,\r\n            showConfirmButton:false,\r\n            \r\n        })\r\n        BookModal.fire({\r\n            title:`${book.title}`,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <BooksView BookView={BookView} book={book} setBooks={setBooks} books={books} shelves={shelves} setMounted={setMounted} Mounted={Mounted} />\r\n    )\r\n}\r\nBook.propTypes = {\r\n    onBooksUpdate: PropTypes.func,\r\n    book: PropTypes.object,\r\n    Shelf: PropTypes.string\r\n}\r\nexport default Book;","import Book from \"../Book/Book\";\r\nimport PropTypes from 'prop-types'\r\nimport { ColorRing } from 'react-loader-spinner'\r\n\r\nconst ShelvesList = (props) => {\r\n    const {Shelf,shelves,books,setBooks,setMounted,Mounted} = props\r\n    return (\r\n        <div className=\"bookshelf\" key={Shelf}>\r\n            <h2 className=\"bookshelf-title\">{shelves.filter(({name}) => name === Shelf.name).map((shelf) => {return (shelf.title)})}</h2>\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                    {\r\n                        books.filter(({shelf}) => shelf === Shelf.name).length > 0\r\n                        ? books.filter(({shelf}) => shelf === Shelf.name).map((book) => <Book key={book.id} book={book} Shelf={book.shelf} books={books} setBooks={ setBooks} shelves={shelves} setMounted={ setMounted} Mounted={Mounted}/>)\r\n                        : books.length > 0\r\n                          ? <h3><span style={{color:\"red\",textDecoration:\"underline\"}}>{books.filter(({shelf}) => shelf === Shelf.name).length}</span> Books found in this shelf.</h3> \r\n                          : <ColorRing\r\n                                visible={true}\r\n                                height=\"80\"\r\n                                width=\"80\"\r\n                                ariaLabel=\"blocks-loading\"\r\n                                wrapperStyle={{}}\r\n                                wrapperClass=\"blocks-wrapper\"\r\n                                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n                            />\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nShelvesList.propTypes = {\r\n    setBooks: PropTypes.func,\r\n    Shelf: PropTypes.object.isRequired,\r\n    book: PropTypes.objectOf(PropTypes.object),\r\n}\r\nexport default ShelvesList;","import { Link } from \"react-router-dom\";\r\nimport ShelvesList from \"../../Components/Shelves/Shelves\";\r\n\r\nconst HomeView = (props) => {\r\n    const {Mounted,setMounted,books,shelves,setBooks} = props\r\n    \r\n\r\n    return(\r\n        <div className=\"list-books\">\r\n          <div className=\"list-books-title\">\r\n            <h1>MyReads</h1>\r\n          </div>\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              { shelves\r\n                .filter(({name}) => name !== \"none\")\r\n                .map((Shelf) =>\r\n                    <ShelvesList\r\n                    key={Shelf.name}\r\n                    Mounted={Mounted}\r\n                    setMounted={ setMounted}\r\n                    books={books}\r\n                    shelves={shelves}\r\n                    Shelf={Shelf}\r\n                    setBooks={setBooks}\r\n                    />\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <Link to={`/search`} >Add a book</Link>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\nexport default HomeView;","import HomeView from \"../../Views/Home/Home\";\r\n\r\nconst MainPage = (props) => {\r\n  const {shelves,books,setBooks,setMounted,Mounted} = props\r\n    return (\r\n        <HomeView \r\n          Mounted={Mounted}\r\n          setMounted={ setMounted}\r\n          books={books}\r\n          shelves={shelves}\r\n          setBooks={ setBooks}\r\n          />\r\n    )\r\n}\r\n\r\nexport default MainPage;","import { Link } from \"react-router-dom\";\r\nimport Book from \"../../Components/Book/Book\";\r\nimport { DebounceInput } from \"react-debounce-input\";\r\n\r\nconst SearchView = (props) => {\r\n    const {searchQuery,SearchQuery,BooksList,shelves,setBooks,books,setMounted,Mounted} = props\r\n    \r\n    return (\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <Link to={`/`}\r\n              className=\"close-search\"\r\n            >\r\n              Close\r\n            </Link>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <DebounceInput\r\n                minLength={2}\r\n                debounceTimeout={250}\r\n                element=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Type Book name here\"\r\n                onChange={SearchQuery}\r\n                \r\n              />\r\n            </div>\r\n          </div>\r\n          {searchQuery.length > 0 && BooksList.matchedBooks ? <div className=\"searchbar-tip\"><span style={{color: BooksList.matchedBooks.length>0 ? \"green\": \"maroon\",textDecoration:\"underline\",margin:\"0px 5px\",}}>{BooksList.matchedBooks.length} </span> Books has been found.</div>: <></>}\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n                { BooksList.matchedBooks && BooksList.matchedBooks.length > 0 \r\n                ? BooksList.currentBooks && BooksList.currentBooks.length > 0 && BooksList.currentBooks.includes({id: BooksList.matchedBooks.map((books) => books.id)})\r\n                    ? BooksList.currentBooks.map((book) => \r\n                    <Book\r\n                        key={book.id}\r\n                        book={book}\r\n                        Shelf={book.shelf}\r\n                        shelves={shelves}\r\n                        setBooks={ setBooks}\r\n                        books={books}\r\n                        setMounted={ setMounted}\r\n                        Mounted={Mounted}\r\n                    />\r\n                    )\r\n                    : BooksList.matchedBooks.map((book) => \r\n                    <Book\r\n                        key={book.id}\r\n                        book={book}\r\n                        Shelf={\"none\"}\r\n                        shelves={shelves}\r\n                        setBooks={ setBooks}\r\n                        books={books}\r\n                        setMounted={ setMounted}\r\n                        Mounted={Mounted}\r\n                    />\r\n                    )\r\n                : <></>}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchView;","import React, {useEffect,useState} from \"react\";\r\nimport * as BooksAPI from '../../Backend/BooksAPI'\r\nimport SearchView from \"../../Views/Search/Search\";\r\n\r\n\r\nconst SearchBar = (props) => {\r\n  const { books,setBooks,setMounted,shelves,Mounted } = props\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [BooksList, setBooksList] = useState([\r\n    {\r\n      currentBooks: [books]\r\n    ,\r\n      matchedBooks: []\r\n    }\r\n  ])\r\n  useEffect(() => {\r\n    if(BooksList.currentBooks && BooksList.currentBooks.length<= 0){\r\n    BooksAPI.getAll()\r\n    .then((current) => {\r\n      setBooksList({...BooksList, currentBooks: [current]})\r\n    })}\r\n  },[BooksList])\r\n  let matched;\r\n\r\n  const SearchQuery = (e) => {\r\n      setSearchQuery(e.target.value.toLowerCase().toString())\r\n      if(searchQuery && e.target.value !== \"\"){\r\n        BooksAPI.search(searchQuery.toLowerCase().toString().trim(), 30)\r\n        .then(mybooks => {\r\n          mybooks.length > 0 ? matched = mybooks.filter((book) => book.title.toLowerCase().includes(searchQuery)) : matched = []\r\n\r\n          matched.length > 0 ? setBooksList({...BooksList, matchedBooks: matched}) : setBooksList({...BooksList, matchedBooks: []})\r\n        })\r\n    } else {\r\n        setBooksList([])\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <SearchView \r\n      searchQuery={searchQuery}\r\n      SearchQuery={SearchQuery}\r\n      BooksList={BooksList}\r\n      shelves={shelves}\r\n      setBooks={ setBooks}\r\n      books={books}\r\n      setMounted={ setMounted}\r\n      Mounted={Mounted}\r\n     />\r\n  )\r\n}\r\n\r\nexport default SearchBar;","import \"../../Utilities/Styles/App.css\";\r\nimport { Outlet} from \"react-router-dom\";\r\n\r\nconst Index = () => {\r\n    return (\r\n        <Outlet />\r\n    )\r\n\r\n}\r\n\r\nexport default Index","import  {HashRouter as Router, Route, Routes} from \"react-router-dom\"\r\nimport MainPage from \"../Main/Main\";\r\nimport SearchBar from \"../Search/Search\";\r\nimport Index from \"../Main/Index\";\r\nimport { useEffect, useState } from \"react\";\r\nimport * as BooksAPI from '../../Backend/BooksAPI'\r\n\r\nconst App = () => {\r\n  const shelves = [\r\n    { name: \"currentlyReading\", title : \"Currently Reading\" },\r\n    { name: \"wantToRead\", title : \"Want to Read\" },\r\n    { name: \"read\", title: \"Read\" },\r\n    { name: \"none\", title:\"None\"}\r\n  ]\r\n  const [books, setBooks] = useState([])\r\n  const [Mounted, setMounted] = useState(false)\r\n  window.onload =() => {\r\n    setMounted(true)\r\n  }\r\n  useEffect(() => {\r\n    if(Mounted===true){\r\n    BooksAPI.getAll()\r\n    .then((mybooks) => {\r\n            if(mybooks !== books){\r\n                setBooks(mybooks)\r\n            }\r\n        })\r\n    }\r\n    return () => setMounted(false)\r\n  }, [Mounted,books])\r\n\r\n  // let color= Mounted===true ? \"lightgreen\" : \"red\"\r\n  // console.log(\"%cMounted:%c %c\"+Mounted, \"font-weight:bold;background:lightgreen;color:white\",\"color:white\",\"text-decoration:underline;color:\"+color)\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Index />}>\r\n          <Route index element={<MainPage books={books} setBooks={ setBooks} setMounted={ setMounted} Mounted={Mounted} shelves={shelves} />} />\r\n          <Route path=\"/search\" element={<SearchBar books={books} setBooks={ setBooks} setMounted={ setMounted} Mounted={Mounted} shelves={shelves} />} />\r\n        </Route>\r\n      </Routes>\r\n    </Router>\r\n    \r\n  );\r\n}\r\nexport default App;\r\n","import React  from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Utilities/Styles/index.css\";\r\nimport App from \"./Components/App/App\";\r\n\r\n\r\nReactDOM.render(\r\n    <App />\r\n  ,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}